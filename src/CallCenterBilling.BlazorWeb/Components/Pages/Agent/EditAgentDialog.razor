@using MudBlazor
@using CallCenterBilling.Application.DTOs
@using CallCenterBilling.Application.Services
@using CallCenterBilling.Application.Interfaces
@inject IAgentService AgentService
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" />
            Edit Agent
        </MudText>
    </TitleContent>
    
    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="@isValid">
            <MudTextField 
                @bind-Value="updateAgentDto.Name"
                Label="Full Name"
                Required="true"
                RequiredError="Name is required"
                Margin="Margin.Dense"
                Class="mb-3" />
            
            <MudTextField 
                @bind-Value="updateAgentDto.Email"
                Label="Email"
                Required="true"
                RequiredError="Email is required"
                Validation="@(new Func<string, IEnumerable<string>>(EmailAddressAttribute))"
                Margin="Margin.Dense"
                Class="mb-3" />
            
            <MudTextField 
                @bind-Value="updateAgentDto.PhoneNumber"
                Label="Phone Number"
                Margin="Margin.Dense"
                Class="mb-3" />
            
            <MudRating 
                @bind-SelectedValue="ratingValue"
                MaxValue="5"
                FullIcon="@Icons.Material.Filled.Star"
                EmptyIcon="@Icons.Material.Filled.StarBorder"
                Color="Color.Primary"
                Size="Size.Large"
                Class="mb-3" />
            <MudText Typo="Typo.caption" Class="mb-3">Rating: @ratingValue/5</MudText>
        </MudForm>
    </DialogContent>
    
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton 
            Color="Color.Primary" 
            Variant="Variant.Filled"
            Disabled="@(!isValid || isLoading)"
            OnClick="UpdateAgent">
            @if (isLoading)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Updating...</MudText>
            }
            else
            {
                <MudText>Update Agent</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialogI { get; set; }
    [Parameter] public AgentDto Agent { get; set; }
    
    private UpdateAgentDto updateAgentDto = new();
    private MudForm form;
    private bool isValid;
    private bool isLoading;
    private int ratingValue;

    protected override void OnInitialized()
    {
        if (Agent != null)
        {
            updateAgentDto = new UpdateAgentDto
            {
                Name = Agent.Name,
                Email = Agent.Email,
                PhoneNumber = Agent.PhoneNumber,
                Rating = Agent.Rating
            };
            ratingValue = (int)Agent.Rating;
        }
    }

     private IEnumerable<string> EmailAddressAttribute(string ch)
    {
        if (string.IsNullOrWhiteSpace(ch))
            yield return "Email cannot be empty";
    }
    
    private async Task UpdateAgent()
    {
        if (!isValid) return;
        
        updateAgentDto.Rating = ratingValue;
        isLoading = true;
        
        try
        {
            await AgentService.UpdateAgentAsync(Agent.Id, updateAgentDto);
            Snackbar.Add($"Agent '{updateAgentDto.Name}' updated successfully", Severity.Success);
            MudDialogI.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error updating agent: {ex.Message}", Severity.Error);
        }
        finally
        {
            isLoading = false;
        }
    }

    private void Cancel() => MudDialogI.Cancel();
}